$date
	Sat Sep  9 19:28:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module add_sub_tb $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Cout $end
$var reg 1 # Cin $end
$var reg 4 $ X [3:0] $end
$var reg 4 % Y [3:0] $end
$scope module as1 $end
$var wire 1 # Cin $end
$var wire 4 & X [3:0] $end
$var wire 4 ' Y [3:0] $end
$var wire 4 ( S [3:0] $end
$var wire 1 " Cout $end
$var wire 3 ) C [3:1] $end
$var wire 4 * B [3:0] $end
$scope module add1 $end
$var wire 1 # Cin $end
$var wire 1 + Cout $end
$var wire 1 , S $end
$var wire 1 - x $end
$var wire 1 . y $end
$upscope $end
$scope module add2 $end
$var wire 1 / Cin $end
$var wire 1 0 Cout $end
$var wire 1 1 S $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module add3 $end
$var wire 1 4 Cin $end
$var wire 1 5 Cout $end
$var wire 1 6 S $end
$var wire 1 7 x $end
$var wire 1 8 y $end
$upscope $end
$scope module add4 $end
$var wire 1 9 Cin $end
$var wire 1 " Cout $end
$var wire 1 : S $end
$var wire 1 ; x $end
$var wire 1 < y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0<
0;
0:
09
08
07
16
05
14
13
12
01
10
0/
0.
1-
1,
0+
b10 *
b10 )
b101 (
b10 '
b11 &
b10 %
b11 $
0#
0"
b101 !
$end
#20
1"
19
14
15
10
06
0:
1/
b111 )
1+
1.
03
18
1<
b1101 *
b1 !
b1 (
1,
1#
#40
04
b101 )
00
11
b11 !
b11 (
06
02
17
b101 $
b101 &
#60
04
0/
00
09
0"
0+
11
16
b0 )
05
0:
0.
13
08
0<
b10 *
b111 !
b111 (
1,
0#
#80
b110 !
b110 (
0,
0-
b100 $
b100 &
#100
